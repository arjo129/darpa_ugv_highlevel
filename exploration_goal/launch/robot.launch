<launch>
    <arg name="robot_name" default="X1" />



    <group ns="$(arg robot_name)">
        <!--<node pkg="exploration_goal" type="exploration_goal" name="exploration_goal" output="screen">
        </node>

        <node pkg="exploration_goal" type="get_ur_ass_inside" name="get_ur_ass_inside">
            <param name="robot_name" type="str" value="$(arg robot_name)" />
        </node>

        <node pkg="lidar_frontier3d" type="frontier" name="frontier_detector">
            <param name="robot_name" type="str" value="$(arg robot_name)" />
        </node

        <include file="$(find object_detection)/launch/object_detection.launch">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>
        -->
        <node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
            <param name="robot_base_frame" value="$(arg robot_name)/base_link"/>
            <param name="costmap_topic" value="steepness_grid"/>
            <param name="costmap_updates_topic" value="$(arg robot_name)/map_updates"/>
            <param name="visualize" value="true"/>
            <param name="planner_frequency" value="0.02"/>
            <param name="progress_timeout" value="30.0"/>
            <param name="potential_scale" value="3.0"/>
            <param name="orientation_scale" value="0.0"/>
            <param name="gain_scale" value="1.0"/>
            <param name="transform_tolerance" value="0.3"/>
            <param name="min_frontier_size" value="0.75"/>
        </node>

        <node pkg="exploration_goal" type="amapper_based_exploration" respawn="false" name="costmap" output="screen">
        </node>

        <include file="$(find loam_velodyne)/launch/loam_velodyne.launch">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <node pkg="exploration_goal" type="defecate.py" name="$(arg robot_name)_defecation_agent">
            <param name="robot_name" type="str" value="$(arg robot_name)" />
        </node>

        <include file="$(find artifact_reporter)/launch/artifact_reporter.launch">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <include file="$(find ugv_obstacle_avoidance)/launch/ugv_obstacle_avoidance.launch">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>

        <!--<include file="$(find global_planner)/launch/ugv.launch">
            <arg name="robot_name" value="$(arg robot_name)" />
        </include>-->
    </group>

</launch>